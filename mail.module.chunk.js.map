{"version":3,"sources":["./node_modules/rxjs/_esm5/add/observable/forkJoin.js","./node_modules/rxjs/_esm5/add/operator/delay.js","./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.html","./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.scss","./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.ts","./src/app/main/content/apps/mail-ngrx/i18n/en.ts","./src/app/main/content/apps/mail-ngrx/i18n/tr.ts","./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.html","./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.scss","./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.ts","./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.html","./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.scss","./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.ts","./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.html","./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.scss","./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.ts","./src/app/main/content/apps/mail-ngrx/mail.component.html","./src/app/main/content/apps/mail-ngrx/mail.component.scss","./src/app/main/content/apps/mail-ngrx/mail.component.ts","./src/app/main/content/apps/mail-ngrx/mail.model.ts","./src/app/main/content/apps/mail-ngrx/mail.module.ts","./src/app/main/content/apps/mail-ngrx/mail.service.ts","./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.html","./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.scss","./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.ts","./src/app/main/content/apps/mail-ngrx/store/actions/filters.actions.ts","./src/app/main/content/apps/mail-ngrx/store/actions/folders.actions.ts","./src/app/main/content/apps/mail-ngrx/store/actions/index.ts","./src/app/main/content/apps/mail-ngrx/store/actions/labels.actions.ts","./src/app/main/content/apps/mail-ngrx/store/actions/mails.actions.ts","./src/app/main/content/apps/mail-ngrx/store/effects/filters.effects.ts","./src/app/main/content/apps/mail-ngrx/store/effects/folders.effects.ts","./src/app/main/content/apps/mail-ngrx/store/effects/index.ts","./src/app/main/content/apps/mail-ngrx/store/effects/labels.effects.ts","./src/app/main/content/apps/mail-ngrx/store/effects/mails.effects.ts","./src/app/main/content/apps/mail-ngrx/store/guards/index.ts","./src/app/main/content/apps/mail-ngrx/store/guards/resolve.guard.ts","./src/app/main/content/apps/mail-ngrx/store/index.ts","./src/app/main/content/apps/mail-ngrx/store/reducers/filters.reducer.ts","./src/app/main/content/apps/mail-ngrx/store/reducers/folders.reducer.ts","./src/app/main/content/apps/mail-ngrx/store/reducers/index.ts","./src/app/main/content/apps/mail-ngrx/store/reducers/labels.reducer.ts","./src/app/main/content/apps/mail-ngrx/store/reducers/mails.reducer.ts","./src/app/main/content/apps/mail-ngrx/store/selectors/filters.selectors.ts","./src/app/main/content/apps/mail-ngrx/store/selectors/folders.selectors.ts","./src/app/main/content/apps/mail-ngrx/store/selectors/index.ts","./src/app/main/content/apps/mail-ngrx/store/selectors/labels.selectors.ts","./src/app/main/content/apps/mail-ngrx/store/selectors/mails.selectors.ts","./src/app/main/content/apps/mail-ngrx/store/store.module.ts"],"names":[],"mappings":"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","file":"mail.module.chunk.js","sourcesContent":["/** PURE_IMPORTS_START .._.._Observable,.._.._observable_forkJoin PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { forkJoin as staticForkJoin } from '../../observable/forkJoin';\nObservable.forkJoin = staticForkJoin;\n//# sourceMappingURL=forkJoin.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/observable/forkJoin.js\n// module id = ./node_modules/rxjs/_esm5/add/observable/forkJoin.js\n// module chunks = mail.module","/** PURE_IMPORTS_START .._.._Observable,.._.._operator_delay PURE_IMPORTS_END */\nimport { Observable } from '../../Observable';\nimport { delay } from '../../operator/delay';\nObservable.prototype.delay = delay;\n//# sourceMappingURL=delay.js.map \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rxjs/_esm5/add/operator/delay.js\n// module id = ./node_modules/rxjs/_esm5/add/operator/delay.js\n// module chunks = mail.module","module.exports = \"<div class=\\\"dialog-content-wrapper\\\">\\r\\n    <mat-toolbar matDialogTitle class=\\\"mat-accent m-0\\\">\\r\\n        <div fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n            <span class=\\\"title dialog-title\\\">New Message</span>\\r\\n            <button mat-button class=\\\"mat-icon-button\\\"\\r\\n                    (click)=\\\"dialogRef.close()\\\"\\r\\n                    aria-label=\\\"Close dialog\\\">\\r\\n                <mat-icon>close</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </mat-toolbar>\\r\\n\\r\\n    <div mat-dialog-content class=\\\"p-24 m-0\\\" fusePerfectScrollbar>\\r\\n\\r\\n        <form name=\\\"composeForm\\\" [formGroup]=\\\"composeForm\\\" class=\\\"compose-form\\\" fxLayout=\\\"column\\\" fxFlex>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput name=\\\"from\\\"\\r\\n                       placeholder=\\\"From\\\"\\r\\n                       formControlName=\\\"from\\\"\\r\\n                       type=\\\"email\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput name=\\\"to\\\"\\r\\n                       placeholder=\\\"To\\\"\\r\\n                       formControlName=\\\"to\\\"\\r\\n                       type=\\\"email\\\" required>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput\\r\\n                       name=\\\"cc\\\"\\r\\n                       placeholder=\\\"Cc\\\"\\r\\n                       formControlName=\\\"cc\\\"\\r\\n                       type=\\\"email\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput\\r\\n                       name=\\\"bcc\\\"\\r\\n                       placeholder=\\\"Bcc\\\"\\r\\n                       formControlName=\\\"bcc\\\"\\r\\n                       type=\\\"email\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input matInput name=\\\"subject\\\"\\r\\n                       placeholder=\\\"Subject\\\"\\r\\n                       formControlName=\\\"subject\\\">\\r\\n            </mat-form-field>\\r\\n\\r\\n            <mat-form-field>\\r\\n            <textarea matInput name=\\\"message\\\"\\r\\n                      placeholder=\\\"Message\\\"\\r\\n                      formControlName=\\\"message\\\"\\r\\n                      rows=\\\"6\\\">\\r\\n            </textarea>\\r\\n            </mat-form-field>\\r\\n\\r\\n            <div class=\\\"attachment-list\\\">\\r\\n\\r\\n                <div class=\\\"attachment\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <div>\\r\\n                        <span class=\\\"filename\\\">attachment-2.doc</span>\\r\\n                        <span class=\\\"size\\\">(12 Kb)</span>\\r\\n                    </div>\\r\\n\\r\\n                    <button mat-icon-button aria-label=\\\"Delete attachment\\\">\\r\\n                        <mat-icon class=\\\"s-16\\\">close</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"attachment\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n                    <div>\\r\\n                        <span class=\\\"filename\\\">attachment-1.jpg</span>\\r\\n                        <span class=\\\"size\\\">(350 Kb)</span>\\r\\n                    </div>\\r\\n\\r\\n                    <button mat-icon-button aria-label=\\\"Delete attachment\\\">\\r\\n                        <mat-icon class=\\\"s-16\\\">close</mat-icon>\\r\\n                    </button>\\r\\n                </div>\\r\\n            </div>\\r\\n        </form>\\r\\n    </div>\\r\\n\\r\\n    <div mat-dialog-actions class=\\\"m-0 p-16\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n        <div>\\r\\n            <button mat-raised-button\\r\\n                    (click)=\\\"dialogRef.close(['send',composeForm])\\\"\\r\\n                    class=\\\"save-button mat-accent\\\"\\r\\n                    [disabled]=\\\"composeForm.invalid\\\"\\r\\n                    aria-label=\\\"SAVE\\\">\\r\\n                SEND\\r\\n            </button>\\r\\n\\r\\n            <button mat-icon-button matTooltip=\\\"Attach a file\\\">\\r\\n                <mat-icon>attach_file</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n\\r\\n        <button mat-button\\r\\n                class=\\\"mat-icon-button\\\"\\r\\n                (click)=\\\"dialogRef.close(['delete',composeForm])\\\"\\r\\n                aria-label=\\\"Delete\\\"\\r\\n                matTooltip=\\\"Delete\\\">\\r\\n            <mat-icon>delete</mat-icon>\\r\\n        </button>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.html\n// module id = ./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.html\n// module chunks = mail.module","module.exports = \".mail-compose-dialog .mat-dialog-container {\\n  padding: 0;\\n  width: 720px; }\\n  .mail-compose-dialog .mat-dialog-container .compose-form .mat-form-field {\\n    width: 100%; }\\n  .mail-compose-dialog .mat-dialog-container .compose-form .attachment-list {\\n    font-size: 13px;\\n    padding-top: 16px; }\\n  .mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment {\\n      background-color: rgba(0, 0, 0, 0.08);\\n      border: 1px solid rgba(0, 0, 0, 0.16);\\n      padding-left: 16px;\\n      margin-top: 8px;\\n      border-radius: 2px; }\\n  .mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment .filename {\\n        font-weight: 500; }\\n  .mail-compose-dialog .mat-dialog-container .compose-form .attachment-list .attachment:last-child {\\n        margin-bottom: 0; }\\n  .mail-compose-dialog .dialog-content-wrapper {\\n  max-height: 85vh;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.scss\n// module id = ./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.scss\n// module chunks = mail.module","import { Component, Inject, ViewEncapsulation } from '@angular/core';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\n\r\n@Component({\r\n    selector     : 'fuse-mail-compose',\r\n    templateUrl  : './compose.component.html',\r\n    styleUrls    : ['./compose.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class FuseMailNgrxComposeDialogComponent\r\n{\r\n    composeForm: FormGroup;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<FuseMailNgrxComposeDialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) private data: any,\r\n        private formBuilder: FormBuilder\r\n    )\r\n    {\r\n        this.composeForm = this.createComposeForm();\r\n    }\r\n    \r\n    createComposeForm()\r\n    {\r\n        return this.formBuilder.group({\r\n            from   : {\r\n                value   : ['johndoe@creapond.com'],\r\n                disabled: [true]\r\n            },\r\n            to     : [''],\r\n            cc     : [''],\r\n            bcc    : [''],\r\n            subject: [''],\r\n            message: ['']\r\n        });\r\n\r\n    }\r\n\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/dialogs/compose/compose.component.ts","export const locale = {\r\n    lang: 'en',\r\n    data: {\r\n        'MAIL': {\r\n            'COMPOSE'                 : 'COMPOSE',\r\n            'FOLDERS'                 : 'FOLDERS',\r\n            'FILTERS'                 : 'FILTERS',\r\n            'LABELS'                  : 'LABELS',\r\n            'NO_MESSAGES'             : 'There are no messages!',\r\n            'SELECT_A_MESSAGE_TO_READ': 'Select a message to read',\r\n            'SEARCH_PLACEHOLDER': 'Search for an e-mail or contact'\r\n        }\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/i18n/en.ts","export const locale = {\r\n    lang: 'tr',\r\n    data: {\r\n        'MAIL': {\r\n            'COMPOSE'                 : 'YENİ E-POSTA',\r\n            'FOLDERS'                 : 'KLASÖRLER',\r\n            'FILTERS'                 : 'FİLTRELER',\r\n            'LABELS'                  : 'ETİKETLER',\r\n            'NO_MESSAGES'             : 'Mesajiniz bulunmamakta!',\r\n            'SELECT_A_MESSAGE_TO_READ': 'Okumak için bir mesaj seçin',\r\n            'SEARCH_PLACEHOLDER'      : 'E-mail yada bir kişi arayın'\r\n        }\r\n    }\r\n};\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/i18n/tr.ts","module.exports = \"<div *ngIf=\\\"!mail\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlex>\\r\\n    <mat-icon class=\\\"s-128 mb-16 select-message-icon\\\">\\r\\n        email\\r\\n    </mat-icon>\\r\\n    <span class=\\\"select-message-text hint-text\\\">\\r\\n        <span>{{ 'MAIL.SELECT_A_MESSAGE_TO_READ' | translate }}</span>\\r\\n    </span>\\r\\n</div>\\r\\n\\r\\n<div *ngIf=\\\"mail\\\">\\r\\n\\r\\n    <div class=\\\"mail-header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between center\\\">\\r\\n\\r\\n        <div>\\r\\n            <div class=\\\"subject\\\" flex>{{mail.subject}}</div>\\r\\n\\r\\n            <div class=\\\"labels\\\" fxLayout=\\\"row wrap\\\">\\r\\n                <div class=\\\"label\\\" *ngFor=\\\"let labelId of mail.labels\\\"\\r\\n                     fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                    <div class=\\\"label-color\\\" [ngStyle]=\\\"{'background-color': (labels$ | async) | getById:labelId:'color'}\\\"></div>\\r\\n                    <div class=\\\"label-title\\\">{{(labels$ | async) | getById:labelId:'title'}}</div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"actions\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n            <button mat-button class=\\\"mat-icon-button\\\" (click)=\\\"toggleStar($event)\\\" aria-label=\\\"Toggle star\\\">\\r\\n                <mat-icon *ngIf=\\\"mail.starred\\\">star</mat-icon>\\r\\n                <mat-icon *ngIf=\\\"!mail.starred\\\">star_outline</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <button mat-button class=\\\"mat-icon-button\\\" (click)=\\\"toggleImportant($event)\\\" aria-label=\\\"Toggle important\\\">\\r\\n                <mat-icon *ngIf=\\\"mail.important\\\">label</mat-icon>\\r\\n                <mat-icon *ngIf=\\\"!mail.important\\\">label_outline</mat-icon>\\r\\n            </button>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"mail-content\\\">\\r\\n\\r\\n        <div class=\\\"info\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"space-between start\\\">\\r\\n\\r\\n            <div fxFlex fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n\\r\\n                <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n\\r\\n                    <div>\\r\\n                        <img *ngIf=\\\"mail.from.avatar\\\" alt=\\\"{{mail.from.name}}\\\"\\r\\n                             src=\\\"{{mail.from.avatar}}\\\" class=\\\"avatar\\\"/>\\r\\n\\r\\n                        <div *ngIf=\\\"!mail.from.avatar\\\" class=\\\"avatar\\\" ms-random-class=\\\"vm.colors\\\">\\r\\n                            {{mail.from.name[0]}}\\r\\n                        </div>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n\\r\\n                        <div class=\\\"name\\\">\\r\\n                            {{mail.from.name}}\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"to\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                            <div class=\\\"to-text\\\">to</div>\\r\\n                            <div>{{mail.to[0].name}}</div>\\r\\n                        </div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n                <a class=\\\"toggle-details\\\" (click)=\\\"showDetails = !showDetails\\\">\\r\\n                    <span *ngIf=\\\"!showDetails\\\">Show Details</span>\\r\\n                    <span *ngIf=\\\"showDetails\\\">Hide Details</span>\\r\\n                </a>\\r\\n\\r\\n                <div *ngIf=\\\"showDetails\\\" class=\\\"details\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n\\r\\n                    <div fxLayout=\\\"column\\\">\\r\\n                        <span class=\\\"title\\\">From:</span>\\r\\n                        <span class=\\\"title\\\">To:</span>\\r\\n                        <span class=\\\"title\\\">Date:</span>\\r\\n                    </div>\\r\\n\\r\\n                    <div fxLayout=\\\"column\\\">\\r\\n                        <span class=\\\"detail\\\">{{mail.from.email}}</span>\\r\\n                        <span class=\\\"detail\\\">{{mail.to[0].email}}</span>\\r\\n                        <span class=\\\"detail\\\">{{mail.time}}</span>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n\\r\\n            <button mat-button [matMenuTriggerFor]=\\\"moreMenu\\\" aria-label=\\\"More\\\" class=\\\"mat-icon-button\\\"\\r\\n                    (click)=\\\"$event.stopPropagation()\\\">\\r\\n                <mat-icon>more_vert</mat-icon>\\r\\n            </button>\\r\\n\\r\\n            <mat-menu #moreMenu=\\\"matMenu\\\">\\r\\n                <button mat-menu-item aria-label=\\\"Reply\\\">\\r\\n                    <mat-icon>reply</mat-icon>\\r\\n                    <span>Reply</span>\\r\\n                </button>\\r\\n\\r\\n                <button mat-menu-item aria-label=\\\"Forward\\\">\\r\\n                    <mat-icon>forward</mat-icon>\\r\\n                    <span>Forward</span>\\r\\n                </button>\\r\\n\\r\\n                <button mat-menu-item aria-label=\\\"Print\\\">\\r\\n                    <mat-icon>print</mat-icon>\\r\\n                    <span>Print</span>\\r\\n                </button>\\r\\n            </mat-menu>\\r\\n        </div>\\r\\n\\r\\n        <div [innerHTML]=\\\"mail.message\\\"></div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n    <div *ngIf=\\\"mail.attachments\\\" class=\\\"mail-attachments\\\">\\r\\n\\r\\n        <div class=\\\"title\\\">\\r\\n            <span>Attachments</span>\\r\\n            ({{mail.attachments.length}})\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"attachment-list\\\" fxLayout=\\\"row wrap\\\">\\r\\n\\r\\n            <div class=\\\"attachment\\\" fxLayout=\\\"column\\\"\\r\\n                 *ngFor=\\\"let attachment of mail.attachments\\\">\\r\\n\\r\\n                <img class=\\\"preview\\\" src=\\\"{{attachment.preview}}\\\">\\r\\n\\r\\n                <div fxLayout=\\\"column\\\">\\r\\n                    <a href=\\\"#\\\" onclick=\\\"event.preventDefault()\\\">View</a>\\r\\n                    <a href=\\\"#\\\" onclick=\\\"event.preventDefault()\\\">Download</a>\\r\\n                    <div class=\\\"size\\\">({{attachment.size}})</div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.html\n// module id = ./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.html\n// module chunks = mail.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  overflow-y: auto;\\n  padding: 24px; }\\n:host .select-message-text {\\n    font-size: 24px;\\n    font-weight: 300; }\\n:host .mail-header {\\n    padding-bottom: 16px;\\n    border-bottom: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .mail-header .actions {\\n      min-width: 88px; }\\n:host .mail-header .subject {\\n      font-size: 17px;\\n      font-weight: 500; }\\n:host .mail-header .label {\\n      font-size: 11px;\\n      border-radius: 2px;\\n      margin: 4px 4px 4px 0;\\n      padding: 3px 8px;\\n      background-color: rgba(0, 0, 0, 0.08); }\\n:host .mail-header .label .label-color {\\n        width: 8px;\\n        height: 8px;\\n        margin-right: 8px;\\n        border-radius: 50%; }\\n:host .mail-content {\\n    padding: 24px 0; }\\n:host .mail-content .to {\\n      color: rgba(0, 0, 0, 0.54); }\\n:host .mail-content .to .to-text {\\n        margin-right: 4px;\\n        text-transform: lowercase; }\\n:host .mail-content .info {\\n      padding-bottom: 16px; }\\n:host .mail-content .info .avatar {\\n        margin-right: 16px;\\n        background-color: #039be5; }\\n:host .mail-content .info .name {\\n        margin-right: 8px;\\n        font-weight: 500; }\\n:host .mail-content .info .toggle-details {\\n        -webkit-user-select: none;\\n           -moz-user-select: none;\\n            -ms-user-select: none;\\n                user-select: none;\\n        text-decoration: underline;\\n        padding-top: 16px;\\n        cursor: pointer;\\n        font-weight: 500; }\\n:host .mail-content .info .details {\\n        padding-top: 8px; }\\n:host .mail-content .info .details .title {\\n          font-weight: 500;\\n          margin-right: 6px; }\\n:host .mail-content .info .details .detail {\\n          color: rgba(0, 0, 0, 0.54); }\\n:host .mail-attachments {\\n    padding: 24px 0;\\n    border-top: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .mail-attachments .title {\\n      margin-bottom: 16px;\\n      font-weight: 500; }\\n:host .mail-attachments .attachment .preview {\\n      width: 100px;\\n      margin: 0 16px 8px 0; }\\n:host .mail-attachments .attachment .link {\\n      margin-bottom: 2px; }\\n:host .mail-attachments .attachment .size {\\n      font-size: 11px; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.scss\n// module id = ./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.scss\n// module chunks = mail.module","import { ChangeDetectionStrategy, Component, Input, OnChanges } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { Mail } from '../mail.model';\r\nimport * as fromStore from '../store';\r\nimport { MailNgrxService } from '../mail.service';\r\n\r\n@Component({\r\n    selector       : 'fuse-mail-details',\r\n    templateUrl    : './mail-details.component.html',\r\n    styleUrls      : ['./mail-details.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseMailNgrxDetailsComponent implements OnChanges\r\n{\r\n    labels$: Observable<any>;\r\n    @Input('mail') mailInput: Mail;\r\n    mail: Mail;\r\n    showDetails = false;\r\n\r\n    constructor(\r\n        private mailService: MailNgrxService,\r\n        private store: Store<fromStore.MailAppState>\r\n    )\r\n    {\r\n        this.labels$ = this.store.select(fromStore.getLabelsArr);\r\n    }\r\n\r\n    ngOnChanges()\r\n    {\r\n        this.updateModel(this.mailInput);\r\n        this.markAsRead();\r\n    }\r\n\r\n    markAsRead()\r\n    {\r\n        if ( this.mail && !this.mail.read )\r\n        {\r\n            this.mail.markRead();\r\n            this.updateMail();\r\n        }\r\n    }\r\n\r\n    toggleStar(event)\r\n    {\r\n        event.stopPropagation();\r\n        this.mail.toggleStar();\r\n        this.updateMail();\r\n    }\r\n\r\n    toggleImportant(event)\r\n    {\r\n        event.stopPropagation();\r\n        this.mail.toggleImportant();\r\n        this.updateMail();\r\n    }\r\n\r\n    updateModel(data)\r\n    {\r\n        this.mail = !data ? null : new Mail({...data});\r\n    }\r\n\r\n    updateMail()\r\n    {\r\n        this.store.dispatch(new fromStore.UpdateMail(this.mail));\r\n        this.updateModel(this.mail);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/mail-details/mail-details.component.ts","module.exports = \"<div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n    <mat-checkbox [checked]=\\\"selected\\\" (change)=\\\"onSelectedChange()\\\"\\r\\n                  (click)=\\\"$event.stopPropagation();\\\">\\r\\n    </mat-checkbox>\\r\\n\\r\\n    <div class=\\\"info\\\" fxFlex FlexLayout=\\\"column\\\">\\r\\n\\r\\n        <div class=\\\"row-1\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <div class=\\\"name\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\" fxFlex>\\r\\n                <img class=\\\"avatar\\\" *ngIf=\\\"mail.from?.avatar\\\" alt=\\\"{{mail.from?.name}}\\\" src=\\\"{{mail.from?.avatar}}\\\"/>\\r\\n                <div class=\\\"avatar\\\" *ngIf=\\\"!mail.from?.avatar\\\">{{mail.from?.name[0]}}</div>\\r\\n                <span class=\\\"text-truncate\\\" *ngIf=\\\"mail?.from\\\">{{mail.from?.name}}</span>\\r\\n                <mat-icon *ngIf=\\\"mail.hasAttachments\\\">attachment</mat-icon>\\r\\n            </div>\\r\\n\\r\\n            <div fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                <div class=\\\"time\\\">{{mail.time}}</div>\\r\\n            </div>\\r\\n\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"row-2\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n            <div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"start start\\\">\\r\\n\\r\\n                <div class=\\\"subject text-truncate\\\">\\r\\n                    {{mail.subject}}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"message text-truncate\\\" *ngIf=\\\"mail?.message\\\">\\r\\n                    {{mail.message | htmlToPlaintext | slice:0:180}}{{mail.message.length > 180 ? '...' : ''}}\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"labels\\\" fxLayout=\\\"row wrap\\\" fxHide fxShow.gt-sm>\\r\\n                    <div class=\\\"label\\\" *ngFor=\\\"let labelId of mail.labels\\\"\\r\\n                         fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <div class=\\\"label-color\\\"\\r\\n                             [ngStyle]=\\\"{'background-color': (labels$ | async) | getById:labelId:'color'}\\\"></div>\\r\\n                        <div class=\\\"label-title\\\">{{(labels$ | async) | getById:labelId:'title'}}</div>\\r\\n                    </div>\\r\\n                </div>\\r\\n\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.html\n// module id = ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.html\n// module chunks = mail.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  -ms-flex-negative: 0;\\n      flex-shrink: 0;\\n  position: relative;\\n  padding: 16px 24px;\\n  border-bottom: 1px solid rgba(0, 0, 0, 0.12);\\n  cursor: pointer;\\n  background: #FAFAFA; }\\n:host.unread {\\n    background: #FFFFFF; }\\n:host.unread .info .name {\\n      font-weight: 700; }\\n:host.unread .info .row-2 .subject {\\n      font-weight: 700; }\\n:host.unread .info .row-2 .labels {\\n      background: #FFFFFF; }\\n:host.selected {\\n    background: #FFF8E1; }\\n:host.selected .info .row-2 .labels {\\n      background: #FFF8E1; }\\n:host.current-mail {\\n    background: #E3F2FD; }\\n:host.current-mail .info .row-2 .labels {\\n      background: #E3F2FD; }\\n:host .info {\\n    overflow: hidden;\\n    width: 0;\\n    margin-left: 16px;\\n    position: relative; }\\n:host .info .row-1 {\\n      margin-bottom: 8px; }\\n:host .info .row-1 .name {\\n        font-size: 15px;\\n        font-weight: 500; }\\n:host .info .row-1 .name .avatar {\\n          min-width: 32px;\\n          width: 32px;\\n          height: 32px;\\n          line-height: 32px;\\n          background-color: #039be5; }\\n:host .info .row-1 .actions {\\n        margin-left: 4px; }\\n:host .info .row-1 .actions .mat-icon-button {\\n          width: 32px;\\n          height: 32px;\\n          line-height: 1; }\\n:host .info .row-2 .subject,\\n    :host .info .row-2 .message {\\n      width: 100%; }\\n:host .info .row-2 .message {\\n      position: relative;\\n      color: rgba(0, 0, 0, 0.54); }\\n:host .info .row-2 .labels {\\n      position: absolute;\\n      background: #FFFFFF;\\n      bottom: 0;\\n      right: 0;\\n      padding-left: 6px; }\\n:host .info .row-2 .labels .label {\\n        font-size: 11px;\\n        border-radius: 2px;\\n        margin: 0 4px 0 0;\\n        padding: 3px 8px;\\n        background-color: rgba(0, 0, 0, 0.08); }\\n:host .info .row-2 .labels .label .label-color {\\n          width: 8px;\\n          height: 8px;\\n          margin-right: 8px;\\n          border-radius: 50%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.scss\n// module id = ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.scss\n// module chunks = mail.module","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, HostBinding, Input, OnInit } from '@angular/core';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\nimport { MailNgrxService } from '../../mail.service';\r\nimport { Mail } from '../../mail.model';\r\nimport * as fromStore from '../../store';\r\n\r\n@Component({\r\n    selector       : 'fuse-mail-list-item',\r\n    templateUrl    : './mail-list-item.component.html',\r\n    styleUrls      : ['./mail-list-item.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseMailNgrxListItemComponent implements OnInit\r\n{\r\n    @Input() mail: Mail;\r\n    @HostBinding('class.selected') selected: boolean;\r\n    @HostBinding('class.unread') unread: boolean;\r\n    labels$: Observable<any>;\r\n    selectedMailIds$: Observable<any>;\r\n\r\n    constructor(\r\n        private mailService: MailNgrxService,\r\n        private store: Store<fromStore.MailAppState>,\r\n        private cd: ChangeDetectorRef\r\n    )\r\n    {\r\n        this.labels$ = this.store.select(fromStore.getLabelsArr);\r\n        this.selectedMailIds$ = this.store.select(fromStore.getSelectedMailIds);\r\n        this.selected = false;\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        // Set the initial values\r\n        this.mail = new Mail(this.mail);\r\n        this.unread = !this.mail.read;\r\n\r\n        this.selectedMailIds$.subscribe((selectedMailIds) => {\r\n            this.selected = selectedMailIds.length > 0 && selectedMailIds.find(id => id === this.mail.id) !== undefined;\r\n            this.refresh();\r\n        });\r\n    }\r\n\r\n    refresh()\r\n    {\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    onSelectedChange()\r\n    {\r\n        this.store.dispatch(new fromStore.ToggleInSelectedMails(this.mail.id));\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list-item/mail-list-item.component.ts","module.exports = \"<div *ngIf=\\\"mails.length === 0\\\" fxLayout=\\\"column\\\" fxLayoutAlign=\\\"center center\\\" fxFlexFill>\\r\\n    <span class=\\\"no-messages-text hint-text\\\">{{ 'MAIL.NO_MESSAGES' | translate }}</span>\\r\\n</div>\\r\\n\\r\\n<div class=\\\"mail-list\\\">\\r\\n    <fuse-mail-list-item matRipple *ngFor=\\\"let mail of mails\\\" [mail]=\\\"mail\\\" (click)=\\\"readMail(mail.id)\\\"\\r\\n                         [ngClass]=\\\"{'current-mail':mail?.id == currentMail?.id}\\\">\\r\\n    </fuse-mail-list-item>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.html\n// module id = ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.html\n// module chunks = mail.module","module.exports = \":host {\\n  position: relative;\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1;\\n          flex: 1;\\n  overflow-y: auto;\\n  padding: 0;\\n  border-right: 1px solid rgba(0, 0, 0, 0.12); }\\n  :host .no-messages-text {\\n    font-size: 24px;\\n    font-weight: 300; }\\n  :host .mail-list {\\n    position: relative;\\n    display: -webkit-box;\\n    display: -ms-flexbox;\\n    display: flex;\\n    -webkit-box-orient: vertical;\\n    -webkit-box-direction: normal;\\n        -ms-flex-direction: column;\\n            flex-direction: column;\\n    -webkit-box-flex: 1;\\n        -ms-flex: 1;\\n            flex: 1; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.scss\n// module id = ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.scss\n// module chunks = mail.module","import { ChangeDetectionStrategy, Component, Input } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\nimport { Mail } from '../mail.model';\r\nimport { MailNgrxService } from '../mail.service';\r\n\r\n@Component({\r\n    selector       : 'fuse-mail-list',\r\n    templateUrl    : './mail-list.component.html',\r\n    styleUrls      : ['./mail-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseMailNgrxListComponent\r\n{\r\n    @Input() mails: Mail[];\r\n    @Input() currentMail: Mail[];\r\n\r\n    constructor(\r\n        private route: ActivatedRoute,\r\n        private mailService: MailNgrxService,\r\n        private router: Router\r\n    )\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Read mail\r\n     * @param mailId\r\n     */\r\n    readMail(mailId)\r\n    {\r\n        const labelHandle  = this.route.snapshot.params.labelHandle,\r\n              filterHandle = this.route.snapshot.params.filterHandle,\r\n              folderHandle = this.route.snapshot.params.folderHandle;\r\n\r\n        if ( labelHandle )\r\n        {\r\n            this.router.navigate(['apps/mail-ngrx/label/' + labelHandle + '/' + mailId]);\r\n        }\r\n        else if ( filterHandle )\r\n        {\r\n            this.router.navigate(['apps/mail-ngrx/filter/' + filterHandle + '/' + mailId]);\r\n        }\r\n        else\r\n        {\r\n            this.router.navigate(['apps/mail-ngrx/' + folderHandle + '/' + mailId]);\r\n        }\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/mail-list/mail-list.component.ts","module.exports = \"<div id=\\\"mail\\\" class=\\\"page-layout carded left-sidenav\\\" fusePerfectScrollbar>\\r\\n\\r\\n    <!-- TOP BACKGROUND -->\\r\\n    <div class=\\\"top-bg mat-accent-bg\\\"></div>\\r\\n    <!-- / TOP BACKGROUND -->\\r\\n\\r\\n    <mat-sidenav-container>\\r\\n\\r\\n        <!-- SIDENAV -->\\r\\n        <mat-sidenav class=\\\"sidenav mat-sidenav-opened\\\" align=\\\"start\\\" mode=\\\"side\\\" opened=\\\"true\\\"\\r\\n                     fuseMatSidenavHelper=\\\"carded-left-sidenav\\\" mat-is-locked-open=\\\"gt-md\\\">\\r\\n            <fuse-mail-main-sidenav></fuse-mail-main-sidenav>\\r\\n        </mat-sidenav>\\r\\n        <!-- / SIDENAV -->\\r\\n\\r\\n        <!-- CENTER -->\\r\\n        <div class=\\\"center\\\">\\r\\n\\r\\n            <!-- CONTENT HEADER -->\\r\\n            <div class=\\\"header\\\" fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                <div class=\\\"search-wrapper\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                    <button mat-button class=\\\"mat-icon-button sidenav-toggle\\\"\\r\\n                            fuseMatSidenavToggler=\\\"carded-left-sidenav\\\"\\r\\n                            fxHide.gt-md aria-label=\\\"Toggle Sidenav\\\">\\r\\n                        <mat-icon>menu</mat-icon>\\r\\n                    </button>\\r\\n\\r\\n                    <div class=\\\"search mat-white-bg\\\" flex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n                        <mat-icon>search</mat-icon>\\r\\n                        <input [formControl]=\\\"searchInput\\\" [placeholder]=\\\"'MAIL.SEARCH_PLACEHOLDER' | translate\\\" fxFlex>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- / CONTENT HEADER -->\\r\\n\\r\\n            <!-- CONTENT CARD -->\\r\\n            <div class=\\\"content-card mat-white-bg\\\" [ngClass]=\\\"{'current-mail-selected':currentMail$ | async}\\\">\\r\\n\\r\\n                <!-- CONTENT TOOLBAR -->\\r\\n                <div class=\\\"toolbar px-24 py-8\\\">\\r\\n\\r\\n                    <div class=\\\"mail-selection\\\" fxFlex=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n\\r\\n                        <mat-checkbox (click)=\\\"toggleSelectAll($event)\\\"\\r\\n                                      [checked]=\\\"hasSelectedMails\\\"\\r\\n                                      [indeterminate]=\\\"isIndeterminate\\\">\\r\\n                        </mat-checkbox>\\r\\n\\r\\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"selectMenu\\\">\\r\\n                            <mat-icon>arrow_drop_down</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #selectMenu=\\\"matMenu\\\">\\r\\n                            <button mat-menu-item (click)=\\\"selectAllMails()\\\">All</button>\\r\\n                            <button mat-menu-item (click)=\\\"deselectAllMails()\\\">None</button>\\r\\n                            <button mat-menu-item (click)=\\\"selectMailsByParameter('read', true)\\\">Read</button>\\r\\n                            <button mat-menu-item (click)=\\\"selectMailsByParameter('read', false)\\\">Unread</button>\\r\\n                            <button mat-menu-item (click)=\\\"selectMailsByParameter('starred', true)\\\">Starred</button>\\r\\n                            <button mat-menu-item (click)=\\\"selectMailsByParameter('starred', false)\\\">Unstarred</button>\\r\\n                            <button mat-menu-item (click)=\\\"selectMailsByParameter('important', true)\\\">Important</button>\\r\\n                            <button mat-menu-item (click)=\\\"selectMailsByParameter('important', false)\\\">Unimportant</button>\\r\\n                        </mat-menu>\\r\\n\\r\\n                        <div class=\\\"toolbar-separator\\\" *ngIf=\\\"hasSelectedMails\\\"></div>\\r\\n\\r\\n                        <button mat-icon-button (click)=\\\"setFolderOnSelectedMails(4)\\\" *ngIf=\\\"hasSelectedMails\\\">\\r\\n                            <mat-icon>delete</mat-icon>\\r\\n                        </button>\\r\\n\\r\\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"folderMenu\\\" *ngIf=\\\"hasSelectedMails\\\">\\r\\n                            <mat-icon>folder</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #folderMenu=\\\"matMenu\\\">\\r\\n                            <button mat-menu-item *ngFor=\\\"let folder of folders$ | async\\\"\\r\\n                                    (click)=\\\"setFolderOnSelectedMails(folder.id)\\\">{{folder.title}}\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n\\r\\n                        <button mat-icon-button [matMenuTriggerFor]=\\\"labelMenu\\\" *ngIf=\\\"hasSelectedMails\\\">\\r\\n                            <mat-icon>label</mat-icon>\\r\\n                        </button>\\r\\n                        <mat-menu #labelMenu=\\\"matMenu\\\">\\r\\n                            <button mat-menu-item *ngFor=\\\"let label of labels$ | async\\\"\\r\\n                                    (click)=\\\"toggleLabelOnSelectedMails(label.id)\\\">{{label.title}}\\r\\n                            </button>\\r\\n                        </mat-menu>\\r\\n                    </div>\\r\\n\\r\\n                    <div *ngIf=\\\"currentMail$ | async\\\" fxHide.gt-xs>\\r\\n                        <button mat-icon-button (click)=\\\"deSelectCurrentMail()\\\">\\r\\n                            <mat-icon>arrow_back</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>\\r\\n                <!-- / CONTENT TOOLBAR -->\\r\\n\\r\\n                <!-- CONTENT -->\\r\\n                <div class=\\\"content\\\" fxLayout=\\\"row\\\">\\r\\n\\r\\n                    <fuse-mail-list fusePerfectScrollbar fxFlex [mails]=\\\"mails$ | async\\\" [currentMail]=\\\"currentMail$ | async\\\"></fuse-mail-list>\\r\\n                    <fuse-mail-details [mail]=\\\"currentMail$ | async\\\" fusePerfectScrollbar fxFlex></fuse-mail-details>\\r\\n\\r\\n                </div>\\r\\n                <!-- / CONTENT -->\\r\\n\\r\\n            </div>\\r\\n            <!-- / CONTENT CARD -->\\r\\n\\r\\n        </div>\\r\\n        <!-- / CENTER -->\\r\\n\\r\\n    </mat-sidenav-container>\\r\\n\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail.component.html\n// module id = ./src/app/main/content/apps/mail-ngrx/mail.component.html\n// module chunks = mail.module","module.exports = \"/**\\n * Applies styles for users in high contrast mode. Note that this only applies\\n * to Microsoft browsers. Chrome can be included by checking for the `html[hc]`\\n * attribute, however Chrome handles high contrast differently.\\n */\\n/* Theme for the ripple elements.*/\\n/* stylelint-disable material/no-prefixes */\\n/* stylelint-enable */\\n:host {\\n  width: 100%; }\\n:host .center .header .search-wrapper {\\n    -webkit-box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12);\\n            box-shadow: 0px 4px 5px -2px rgba(0, 0, 0, 0.2), 0px 7px 10px 1px rgba(0, 0, 0, 0.14), 0px 2px 16px 1px rgba(0, 0, 0, 0.12); }\\n:host .center .header .search-wrapper .sidenav-toggle {\\n      margin: 0;\\n      width: 56px;\\n      height: 56px;\\n      background: #FFF;\\n      border-radius: 0;\\n      border-right: 1px solid rgba(0, 0, 0, 0.12); }\\n:host .center .header .search-wrapper .search {\\n      width: 100%;\\n      height: 56px;\\n      line-height: 56px;\\n      padding: 18px; }\\n:host .center .header .search-wrapper .search input {\\n        height: 56px;\\n        padding-left: 16px;\\n        color: rgba(0, 0, 0, 0.54);\\n        border: none;\\n        outline: none; }\\n@media screen and (max-width: 599px) {\\n    :host .center .content-card fuse-mail-list {\\n      border-right: none; }\\n    :host .center .content-card fuse-mail-list,\\n    :host .center .content-card fuse-mail-details {\\n      -webkit-box-flex: 1;\\n          -ms-flex: 1 0 100%;\\n              flex: 1 0 100%; }\\n    :host .center .content-card fuse-mail-details {\\n      display: none !important; }\\n    :host .center .content-card.current-mail-selected .toolbar {\\n      padding-left: 16px !important; }\\n      :host .center .content-card.current-mail-selected .toolbar .mail-selection {\\n        display: none !important; }\\n    :host .center .content-card.current-mail-selected .content fuse-mail-list {\\n      display: none !important; }\\n    :host .center .content-card.current-mail-selected .content fuse-mail-details {\\n      display: -webkit-box !important;\\n      display: -ms-flexbox !important;\\n      display: flex !important; } }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/mail.component.scss\n// module id = ./src/app/main/content/apps/mail-ngrx/mail.component.scss\n// module chunks = mail.module","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport 'rxjs/add/operator/distinctUntilChanged';\r\n\r\nimport { FuseTranslationLoaderService } from '@fuse/services/translation-loader.service';\r\nimport { FuseConfigService } from '@fuse/services/config.service';\r\n\r\nimport { MailNgrxService } from './mail.service';\r\nimport { Mail } from './mail.model';\r\nimport * as fromStore from './store';\r\nimport { locale as english } from './i18n/en';\r\nimport { locale as turkish } from './i18n/tr';\r\n\r\n@Component({\r\n    selector       : 'fuse-mail',\r\n    templateUrl    : './mail.component.html',\r\n    styleUrls      : ['./mail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseMailNgrxComponent implements OnInit, OnDestroy\r\n{\r\n    hasSelectedMails: boolean;\r\n    isIndeterminate: boolean;\r\n    searchInput: FormControl;\r\n    mails$: Observable<any>;\r\n    folders$: Observable<any>;\r\n    labels$: Observable<any>;\r\n    currentMail$: Observable<Mail>;\r\n    selectedMailIds$: Observable<string[]>;\r\n    searchText$: Observable<string>;\r\n    mails: Mail[];\r\n    selectedMailIds: string[];\r\n\r\n    constructor(\r\n        private configService: FuseConfigService,\r\n        private mailService: MailNgrxService,\r\n        private translationLoader: FuseTranslationLoaderService,\r\n        private store: Store<fromStore.MailAppState>,\r\n        private cd: ChangeDetectorRef\r\n    )\r\n    {\r\n        this.searchInput = new FormControl('');\r\n        this.translationLoader.loadTranslations(english, turkish);\r\n        this.currentMail$ = this.store.select(fromStore.getCurrentMail);\r\n        this.mails$ = this.store.select(fromStore.getMailsArr);\r\n        this.folders$ = this.store.select(fromStore.getFoldersArr);\r\n        this.labels$ = this.store.select(fromStore.getLabelsArr);\r\n        this.selectedMailIds$ = this.store.select(fromStore.getSelectedMailIds);\r\n        this.searchText$ = this.store.select(fromStore.getSearchText);\r\n        this.mails = [];\r\n        this.selectedMailIds = [];\r\n\r\n        this.configService.setConfig({\r\n            routerAnimation: 'none'\r\n        });\r\n    }\r\n\r\n    ngOnInit()\r\n    {\r\n        this.mails$.subscribe(mails => {\r\n            this.mails = mails;\r\n        });\r\n\r\n        this.selectedMailIds$\r\n            .subscribe(selectedMailIds => {\r\n                this.selectedMailIds = selectedMailIds;\r\n                this.hasSelectedMails = selectedMailIds.length > 0;\r\n                this.isIndeterminate = (selectedMailIds.length !== this.mails.length && selectedMailIds.length > 0);\r\n                this.refresh();\r\n            });\r\n\r\n        this.searchText$.subscribe(searchText => {\r\n            this.searchInput.setValue(searchText);\r\n        });\r\n\r\n        this.searchInput.valueChanges\r\n            .debounceTime(300)\r\n            .distinctUntilChanged()\r\n            .subscribe(searchText => {\r\n                this.store.dispatch(new fromStore.SetSearchText(searchText));\r\n            });\r\n    }\r\n\r\n    ngOnDestroy()\r\n    {\r\n        this.cd.detach();\r\n    }\r\n\r\n    toggleSelectAll(ev)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        if ( this.selectedMailIds.length && this.selectedMailIds.length > 0 )\r\n        {\r\n            this.deselectAllMails();\r\n        }\r\n        else\r\n        {\r\n            this.selectAllMails();\r\n        }\r\n    }\r\n\r\n    selectAllMails()\r\n    {\r\n        this.store.dispatch(new fromStore.SelectAllMails());\r\n    }\r\n\r\n    deselectAllMails()\r\n    {\r\n        this.store.dispatch(new fromStore.DeselectAllMails());\r\n    }\r\n\r\n    selectMailsByParameter(parameter, value)\r\n    {\r\n        this.store.dispatch(new fromStore.SelectMailsByParameter({\r\n            parameter,\r\n            value\r\n        }));\r\n    }\r\n\r\n    toggleLabelOnSelectedMails(labelId)\r\n    {\r\n        this.store.dispatch(new fromStore.AddLabelOnSelectedMails(labelId));\r\n    }\r\n\r\n    setFolderOnSelectedMails(folderId)\r\n    {\r\n        this.store.dispatch(new fromStore.SetFolderOnSelectedMails(folderId));\r\n    }\r\n\r\n    deSelectCurrentMail()\r\n    {\r\n        this.store.dispatch(new fromStore.SetCurrentMail(''));\r\n    }\r\n\r\n    refresh()\r\n    {\r\n        this.cd.markForCheck();\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/mail.component.ts","export class Mail\r\n{\r\n    id: string;\r\n    from: {\r\n        name: string,\r\n        avatar: string,\r\n        email: string\r\n    };\r\n    to: {\r\n        name: string,\r\n        email: string\r\n    }[];\r\n    subject: string;\r\n    message: string;\r\n    time: string;\r\n    read: boolean;\r\n    starred: boolean;\r\n    important: boolean;\r\n    hasAttachments: boolean;\r\n    attachments: {\r\n        type: string,\r\n        fileName: string,\r\n        preview: string,\r\n        url: string,\r\n        size: string\r\n    }[];\r\n    labels: string[];\r\n    folder: string;\r\n\r\n    constructor(mail)\r\n    {\r\n        this.id = mail.id;\r\n        this.from = mail.from;\r\n        this.to = mail.to;\r\n        this.subject = mail.subject;\r\n        this.message = mail.message;\r\n        this.time = mail.time;\r\n        this.read = mail.read;\r\n        this.starred = mail.starred;\r\n        this.important = mail.important;\r\n        this.hasAttachments = mail.hasAttachments;\r\n        this.attachments = mail.attachments;\r\n        this.labels = mail.labels;\r\n        this.folder = mail.folder;\r\n    }\r\n\r\n    toggleStar()\r\n    {\r\n        this.starred = !this.starred;\r\n    }\r\n\r\n    toggleImportant()\r\n    {\r\n        this.important = !this.important;\r\n    }\r\n\r\n    markRead()\r\n    {\r\n        this.read = true;\r\n    }\r\n\r\n    markUnRead()\r\n    {\r\n        this.read = false;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/mail.model.ts","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\n\r\nimport { MatButtonModule, MatCheckboxModule, MatDialogModule, MatFormFieldModule, MatIconModule, MatInputModule, MatMenuModule, MatRippleModule, MatSelectModule, MatSidenavModule, MatToolbarModule } from '@angular/material';\r\n\r\nimport { TranslateModule } from '@ngx-translate/core';\r\n\r\nimport { FuseSharedModule } from '@fuse/shared.module';\r\n\r\nimport { MailAppStoreModule } from './store/store.module';\r\nimport * as fromGuards from './store/guards/index';\r\n\r\nimport { FuseMailNgrxComponent } from './mail.component';\r\nimport { FuseMailNgrxMainSidenavComponent } from './sidenavs/main/main-sidenav.component';\r\nimport { FuseMailNgrxListItemComponent } from './mail-list/mail-list-item/mail-list-item.component';\r\nimport { FuseMailNgrxListComponent } from './mail-list/mail-list.component';\r\nimport { FuseMailNgrxDetailsComponent } from './mail-details/mail-details.component';\r\nimport { MailNgrxService } from './mail.service';\r\nimport { FuseMailNgrxComposeDialogComponent } from './dialogs/compose/compose.component';\r\n\r\nconst routes: Routes = [\r\n    {\r\n        path       : 'label/:labelHandle',\r\n        component  : FuseMailNgrxComponent,\r\n        canActivate: [fromGuards.ResolveGuard]\r\n    },\r\n    {\r\n        path       : 'label/:labelHandle/:mailId',\r\n        component  : FuseMailNgrxComponent,\r\n        canActivate: [fromGuards.ResolveGuard]\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle',\r\n        component: FuseMailNgrxComponent,\r\n        canActivate: [fromGuards.ResolveGuard]\r\n    },\r\n    {\r\n        path     : 'filter/:filterHandle/:mailId',\r\n        component: FuseMailNgrxComponent,\r\n        canActivate: [fromGuards.ResolveGuard]\r\n    },\r\n    {\r\n        path     : ':folderHandle',\r\n        component: FuseMailNgrxComponent,\r\n        canActivate: [fromGuards.ResolveGuard]\r\n    },\r\n    {\r\n        path     : ':folderHandle/:mailId',\r\n        component: FuseMailNgrxComponent,\r\n        canActivate: [fromGuards.ResolveGuard]\r\n    },\r\n    {\r\n        path      : '**',\r\n        redirectTo: 'inbox'\r\n    }\r\n];\r\n\r\n@NgModule({\r\n    declarations   : [\r\n        FuseMailNgrxComponent,\r\n        FuseMailNgrxListComponent,\r\n        FuseMailNgrxListItemComponent,\r\n        FuseMailNgrxDetailsComponent,\r\n        FuseMailNgrxMainSidenavComponent,\r\n        FuseMailNgrxComposeDialogComponent\r\n    ],\r\n    imports        : [\r\n        RouterModule.forChild(routes),\r\n\r\n        MatButtonModule,\r\n        MatCheckboxModule,\r\n        MatDialogModule,\r\n        MatFormFieldModule,\r\n        MatIconModule,\r\n        MatInputModule,\r\n        MatMenuModule,\r\n        MatRippleModule,\r\n        MatSelectModule,\r\n        MatSidenavModule,\r\n        MatToolbarModule,\r\n\r\n        TranslateModule,\r\n\r\n        FuseSharedModule,\r\n\r\n        MailAppStoreModule\r\n    ],\r\n    providers      : [\r\n        MailNgrxService,\r\n        fromGuards.ResolveGuard\r\n    ],\r\n    entryComponents: [FuseMailNgrxComposeDialogComponent]\r\n})\r\nexport class FuseMailNgrxModule\r\n{\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/mail.module.ts","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Mail } from './mail.model';\r\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\r\nimport { Store } from '@ngrx/store';\r\nimport { MailAppState } from './store/reducers';\r\nimport { getFiltersArr, getFoldersArr, getLabelsArr, getMailsArr } from './store/selectors';\r\n\r\n@Injectable()\r\nexport class MailNgrxService\r\n{\r\n    foldersArr: any;\r\n    filtersArr: any;\r\n    labelsArr: any;\r\n    selectedMails: Mail[];\r\n    mails: Mail[];\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private store: Store<MailAppState>\r\n    )\r\n    {\r\n        this.store.select(getFoldersArr).subscribe(folders => {\r\n            this.foldersArr = folders;\r\n        });\r\n        this.store.select(getFiltersArr).subscribe(filters => {\r\n            this.filtersArr = filters;\r\n        });\r\n        this.store.select(getLabelsArr).subscribe(labels => {\r\n            this.labelsArr = labels;\r\n        });\r\n        this.store.select(getMailsArr).subscribe(mails => {\r\n            this.mails = mails;\r\n        });\r\n\r\n        this.selectedMails = [];\r\n    }\r\n\r\n    getAllMails(): Observable<Mail[]>\r\n    {\r\n        return this.http.get<Mail[]>('api/mail-mails');\r\n    }\r\n\r\n    getFolders(): Observable<any>\r\n    {\r\n        return this.http.get('api/mail-folders');\r\n    }\r\n\r\n    getFilters(): Observable<any>\r\n    {\r\n        return this.http.get('api/mail-filters');\r\n    }\r\n\r\n    getLabels(): Observable<any>\r\n    {\r\n        return this.http.get('api/mail-labels');\r\n    }\r\n\r\n    getMails(handle): Observable<Mail[]>\r\n    {\r\n        if ( handle.id === 'labelHandle' )\r\n        {\r\n            const labelId = this.labelsArr.find(label => label.handle === handle.value).id;\r\n            return this.http.get<Mail[]>('api/mail-mails?labels=' + labelId);\r\n        }\r\n        else if ( handle.id === 'filterHandle' )\r\n        {\r\n            return this.http.get<Mail[]>('api/mail-mails?' + handle.value + '=true');\r\n        }\r\n        else // folderHandle\r\n        {\r\n            const folderId = this.foldersArr.find(folder => folder.handle === handle.value).id;\r\n            return this.http.get<any>('api/mail-mails?folder=' + folderId);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Update the mail\r\n     * @param mail\r\n     * @returns {Promise<any>}\r\n     */\r\n    updateMail(mail)\r\n    {\r\n        return this.http.post('api/mail-mails/' + mail.id, {...mail});\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/mail.service.ts","module.exports = \"<!-- SIDENAV HEADER -->\\r\\n<div fxLayout=\\\"column\\\" fxLayoutAlign=\\\"space-between start\\\"\\r\\n     class=\\\"header p-24 pb-4\\\" ngClass=\\\"mat-accent-bg\\\" ngClass.gt-md=\\\"white-fg\\\">\\r\\n\\r\\n    <div class=\\\"logo\\\" fxFlex fxLayout=\\\"row\\\" fxLayoutAlign=\\\"start center\\\">\\r\\n        <mat-icon class=\\\"logo-icon s-32\\\">mail</mat-icon>\\r\\n        <span class=\\\"logo-text\\\">Mailbox Ngrx</span>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"account\\\" fxLayout=\\\"column\\\">\\r\\n        <div class=\\\"title\\\">John Doe</div>\\r\\n        <mat-form-field floatPlaceholder=\\\"never\\\">\\r\\n            <mat-select class=\\\"account-selection\\\" placeholder=\\\"Mail Selection\\\"\\r\\n                        [ngModel]=\\\"selectedAccount\\\">\\r\\n                <mat-option *ngFor=\\\"let account of (accounts | keys)\\\" [value]=\\\"account.key\\\">\\r\\n                    {{account.value}}\\r\\n                </mat-option>\\r\\n            </mat-select>\\r\\n        </mat-form-field>\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<!-- / SIDENAV HEADER -->\\r\\n\\r\\n<!-- SIDENAV CONTENT -->\\r\\n<div class=\\\"content\\\" fusePerfectScrollbar>\\r\\n\\r\\n    <div class=\\\"p-24\\\">\\r\\n        <button mat-raised-button fxFlex\\r\\n                class=\\\"mat-accent compose-dialog-button\\\"\\r\\n                (click)=\\\"composeDialog()\\\"\\r\\n                aria-label=\\\"Compose\\\">\\r\\n            {{ 'MAIL.COMPOSE' | translate }}\\r\\n        </button>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\"nav\\\">\\r\\n\\r\\n        <div class=\\\"nav-subheader\\\">{{ 'MAIL.FOLDERS' | translate }}</div>\\r\\n\\r\\n        <div class=\\\"nav-item\\\" *ngFor=\\\"let folder of (folders$ | async)\\\">\\r\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/mail-ngrx/' + folder.handle\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon class=\\\"nav-link-icon\\\" *ngIf=\\\"folder.icon\\\">{{folder.icon}}</mat-icon>\\r\\n                <span>{{folder.title}}</span>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"nav-subheader\\\">{{ 'MAIL.FILTERS' | translate }}</div>\\r\\n\\r\\n        <div class=\\\"nav-item\\\" *ngFor=\\\"let filter of (filters$ | async)\\\">\\r\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/mail-ngrx/filter/' + filter.handle\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon class=\\\"nav-link-icon\\\" *ngIf=\\\"filter.icon\\\">{{filter.icon}}</mat-icon>\\r\\n                <span>{{filter.title}}</span>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"nav-subheader\\\">{{ 'MAIL.LABELS' | translate }}</div>\\r\\n\\r\\n        <div class=\\\"nav-item\\\" *ngFor=\\\"let label of (labels$ | async)\\\">\\r\\n            <a class=\\\"nav-link\\\" matRipple [routerLink]=\\\"'/apps/mail-ngrx/label/' + label.handle\\\" routerLinkActive=\\\"active\\\">\\r\\n                <mat-icon class=\\\"nav-link-icon\\\" [ngStyle]=\\\"{'color':label.color}\\\">label</mat-icon>\\r\\n                <span>{{label.title}}</span>\\r\\n            </a>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n\\r\\n</div>\\r\\n<!-- / SIDENAV CONTENT -->\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.html\n// module id = ./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.html\n// module chunks = mail.module","module.exports = \":host {\\n  display: -webkit-box;\\n  display: -ms-flexbox;\\n  display: flex;\\n  -webkit-box-flex: 1;\\n      -ms-flex: 1 0 auto;\\n          flex: 1 0 auto;\\n  -webkit-box-orient: vertical;\\n  -webkit-box-direction: normal;\\n      -ms-flex-direction: column;\\n          flex-direction: column;\\n  height: 100%; }\\n  :host .header .logo .logo-icon {\\n    margin: 0 16px 0 0; }\\n  :host .header .logo .logo-text {\\n    font-size: 24px;\\n    line-height: 24px; }\\n  :host .header .account {\\n    width: 100%; }\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.scss\n// module id = ./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.scss\n// module chunks = mail.module","import { ChangeDetectionStrategy, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { MatDialog } from '@angular/material';\r\nimport { FormGroup } from '@angular/forms';\r\n\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { Store } from '@ngrx/store';\r\n\r\nimport { MailNgrxService } from '../../mail.service';\r\nimport * as fromStore from './../../store';\r\nimport { FuseMailNgrxComposeDialogComponent } from '../../dialogs/compose/compose.component';\r\n\r\n@Component({\r\n    selector       : 'fuse-mail-main-sidenav',\r\n    templateUrl    : './main-sidenav.component.html',\r\n    styleUrls      : ['./main-sidenav.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class FuseMailNgrxMainSidenavComponent\r\n{\r\n    labels: any[];\r\n    accounts: object;\r\n    selectedAccount: string;\r\n    dialogRef: any;\r\n\r\n    folders$: Observable<any>;\r\n    filters$: Observable<any>;\r\n    labels$: Observable<any>;\r\n\r\n    constructor(\r\n        private mailService: MailNgrxService,\r\n        public dialog: MatDialog,\r\n        private store: Store<fromStore.MailAppState>\r\n    )\r\n    {\r\n        // Data\r\n        this.accounts = {\r\n            'creapond'    : 'johndoe@creapond.com',\r\n            'withinpixels': 'johndoe@withinpixels.com'\r\n        };\r\n\r\n        this.selectedAccount = 'creapond';\r\n\r\n        this.folders$ = this.store.select(fromStore.getFoldersArr);\r\n        this.filters$ = this.store.select(fromStore.getFiltersArr);\r\n        this.labels$ = this.store.select(fromStore.getLabelsArr);\r\n    }\r\n\r\n    composeDialog()\r\n    {\r\n        this.dialogRef = this.dialog.open(FuseMailNgrxComposeDialogComponent, {\r\n            panelClass: 'mail-compose-dialog'\r\n        });\r\n        this.dialogRef.afterClosed()\r\n            .subscribe(response => {\r\n                if ( !response )\r\n                {\r\n                    return;\r\n                }\r\n                const actionType: string = response[0];\r\n                const formData: FormGroup = response[1];\r\n                switch ( actionType )\r\n                {\r\n                    /**\r\n                     * Send\r\n                     */\r\n                    case 'send':\r\n                        console.log('new Mail', formData.getRawValue());\r\n                        break;\r\n                    /**\r\n                     * Delete\r\n                     */\r\n                    case 'delete':\r\n                        console.log('delete Mail');\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/sidenavs/main/main-sidenav.component.ts","import { Action } from '@ngrx/store';\r\n\r\nexport const GET_FILTERS = '[FILTERS] GET FILTERS';\r\nexport const GET_FILTERS_SUCCESS = '[FILTERS] GET FILTERS SUCCESS';\r\nexport const GET_FILTERS_FAILED = '[FILTERS] GET FILTERS FAILED';\r\n\r\n/**\r\n * Get Filters\r\n */\r\nexport class GetFilters implements Action\r\n{\r\n    readonly type = GET_FILTERS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Filters Success\r\n */\r\nexport class GetFiltersSuccess implements Action\r\n{\r\n    readonly type = GET_FILTERS_SUCCESS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Filters Failed\r\n */\r\nexport class GetFiltersFailed implements Action\r\n{\r\n    readonly type = GET_FILTERS_FAILED;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\nexport type FiltersActionsAll\r\n    = GetFilters\r\n    | GetFiltersSuccess\r\n    | GetFiltersFailed;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/actions/filters.actions.ts","import { Action } from '@ngrx/store';\r\n\r\nexport const GET_FOLDERS = '[FOLDERS] GET FOLDERS';\r\nexport const GET_FOLDERS_SUCCESS = '[FOLDERS] GET FOLDERS SUCCESS';\r\nexport const GET_FOLDERS_FAILED = '[FOLDERS] GET FOLDERS FAILED';\r\n\r\n/**\r\n * Get Folders\r\n */\r\nexport class GetFolders implements Action\r\n{\r\n    readonly type = GET_FOLDERS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Folders Success\r\n */\r\nexport class GetFoldersSuccess implements Action\r\n{\r\n    readonly type = GET_FOLDERS_SUCCESS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Folders Failed\r\n */\r\nexport class GetFoldersFailed implements Action\r\n{\r\n    readonly type = GET_FOLDERS_FAILED;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\nexport type FoldersActionsAll\r\n    = GetFolders\r\n    | GetFoldersSuccess\r\n    | GetFoldersFailed;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/actions/folders.actions.ts","export * from './mails.actions';\r\nexport * from './folders.actions';\r\nexport * from './filters.actions';\r\nexport * from './labels.actions';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/actions/index.ts","import { Action } from '@ngrx/store';\r\n\r\nexport const GET_LABELS = '[LABELS] GET LABELS';\r\nexport const GET_LABELS_SUCCESS = '[LABELS] GET LABELS SUCCESS';\r\nexport const GET_LABELS_FAILED = '[LABELS] GET LABELS FAILED';\r\n\r\n/**\r\n * Get Labels\r\n */\r\nexport class GetLabels implements Action\r\n{\r\n    readonly type = GET_LABELS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Labels Success\r\n */\r\nexport class GetLabelsSuccess implements Action\r\n{\r\n    readonly type = GET_LABELS_SUCCESS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Labels Failed\r\n */\r\nexport class GetLabelsFailed implements Action\r\n{\r\n    readonly type = GET_LABELS_FAILED;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\nexport type LabelsActionsAll\r\n    = GetLabels\r\n    | GetLabelsSuccess\r\n    | GetLabelsFailed;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/actions/labels.actions.ts","import { Action } from '@ngrx/store';\r\nimport { Mail } from '../../mail.model';\r\n\r\nexport const GET_MAILS = '[MAILS] GET MAILS';\r\nexport const GET_MAILS_SUCCESS = '[MAILS] GET MAILS SUCCESS';\r\nexport const GET_MAILS_FAILED = '[MAILS] GET MAILS FAILED';\r\nexport const SET_CURRENT_MAIL = '[MAILS] SET CURRENT MAIL';\r\nexport const SET_CURRENT_MAIL_SUCCESS = '[MAILS] SET CURRENT MAIL SUCCESS';\r\nexport const CHECK_CURRENT_MAIL = '[MAILS] CHECK CURRENT MAIL';\r\nexport const UPDATE_MAIL = '[MAILS] UPDATE MAIL';\r\nexport const UPDATE_MAIL_SUCCESS = '[MAILS] UPDATE MAIL SUCCESS';\r\nexport const UPDATE_MAILS = '[MAILS] UPDATE MAILS';\r\nexport const UPDATE_MAILS_SUCCESS = '[MAILS] UPDATE MAILS SUCCESS';\r\nexport const SET_SEARCH_TEXT = '[MAILS] SET SEARCH TEXT';\r\nexport const SELECT_ALL_MAILS = '[MAILS] SELECT ALL MAILS';\r\nexport const DESELECT_ALL_MAILS = '[MAILS] DESELECT ALL MAILS';\r\nexport const TOGGLE_IN_SELECTED_MAILS = '[MAILS] TOGGLE IN SELECTED MAILS';\r\nexport const SELECT_MAILS_BY_PARAMETER = '[MAILS] SELECT MAILS BY PARAMETER';\r\nexport const SET_FOLDER_ON_SELECTED_MAILS = '[MAILS] SET FOLDER ON SELECTED MAILS';\r\nexport const ADD_LABEL_ON_SELECTED_MAILS = '[MAILS] ADD LABEL ON SELECTED MAILS';\r\n\r\n/**\r\n * Get Mails\r\n */\r\nexport class GetMails implements Action\r\n{\r\n    readonly type = GET_MAILS;\r\n\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Mails Success\r\n */\r\nexport class GetMailsSuccess implements Action\r\n{\r\n    readonly type = GET_MAILS_SUCCESS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Get Mails Failed\r\n */\r\nexport class GetMailsFailed implements Action\r\n{\r\n    readonly type = GET_MAILS_FAILED;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Set Current Mail\r\n */\r\nexport class SetCurrentMail implements Action\r\n{\r\n    readonly type = SET_CURRENT_MAIL;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Set Current Mail Success\r\n */\r\nexport class SetCurrentMailSuccess implements Action\r\n{\r\n    readonly type = SET_CURRENT_MAIL_SUCCESS;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Check Current Mail\r\n */\r\nexport class CheckCurrentMail implements Action\r\n{\r\n    readonly type = CHECK_CURRENT_MAIL;\r\n\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Update Mail\r\n */\r\nexport class UpdateMail implements Action\r\n{\r\n    readonly type = UPDATE_MAIL;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Update Mail Success\r\n */\r\nexport class UpdateMailSuccess implements Action\r\n{\r\n    readonly type = UPDATE_MAIL_SUCCESS;\r\n\r\n    constructor(public payload: Mail)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Update Mails\r\n */\r\nexport class UpdateMails implements Action\r\n{\r\n    readonly type = UPDATE_MAILS;\r\n\r\n    constructor(public payload: Mail[])\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Update Mails Success\r\n */\r\nexport class UpdateMailsSuccess implements Action\r\n{\r\n    readonly type = UPDATE_MAILS_SUCCESS;\r\n\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Set Search Text\r\n */\r\nexport class SetSearchText implements Action\r\n{\r\n    readonly type = SET_SEARCH_TEXT;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Select All Mails\r\n */\r\nexport class SelectAllMails implements Action\r\n{\r\n    readonly type = SELECT_ALL_MAILS;\r\n\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Deselect All Mails\r\n */\r\nexport class DeselectAllMails implements Action\r\n{\r\n    readonly type = DESELECT_ALL_MAILS;\r\n\r\n    constructor()\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Toggle In Selected Mails\r\n */\r\nexport class ToggleInSelectedMails implements Action\r\n{\r\n    readonly type = TOGGLE_IN_SELECTED_MAILS;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Select Mails by Parameter\r\n */\r\nexport class SelectMailsByParameter implements Action\r\n{\r\n    readonly type = SELECT_MAILS_BY_PARAMETER;\r\n\r\n    constructor(public payload: any)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Set Folder on Selected Mails\r\n */\r\nexport class SetFolderOnSelectedMails implements Action\r\n{\r\n    readonly type = SET_FOLDER_ON_SELECTED_MAILS;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\n/**\r\n * Add label on Selected Mails\r\n */\r\nexport class AddLabelOnSelectedMails implements Action\r\n{\r\n    readonly type = ADD_LABEL_ON_SELECTED_MAILS;\r\n\r\n    constructor(public payload: string)\r\n    {\r\n    }\r\n}\r\n\r\nexport type MailsActionsAll\r\n    = GetMails\r\n    | GetMailsSuccess\r\n    | GetMailsFailed\r\n    | SetCurrentMail\r\n    | SetCurrentMailSuccess\r\n    | CheckCurrentMail\r\n    | UpdateMail\r\n    | UpdateMailSuccess\r\n    | UpdateMails\r\n    | UpdateMailsSuccess\r\n    | SetSearchText\r\n    | SelectAllMails\r\n    | DeselectAllMails\r\n    | ToggleInSelectedMails\r\n    | SelectMailsByParameter\r\n    | SetFolderOnSelectedMails\r\n    | AddLabelOnSelectedMails;\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/actions/mails.actions.ts","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\nimport * as FiltersActions from '../actions/filters.actions';\r\nimport { MailNgrxService } from '../../mail.service';\r\n\r\n@Injectable()\r\nexport class FiltersEffect\r\n{\r\n    constructor(\r\n        private actions: Actions,\r\n        private mailService: MailNgrxService\r\n    )\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Get filters from Server\r\n     * @type {Observable<any>}\r\n     */\r\n    @Effect()\r\n    getFilters: Observable<FiltersActions.FiltersActionsAll> =\r\n        this.actions\r\n            .ofType<FiltersActions.GetFilters>(FiltersActions.GET_FILTERS)\r\n            .pipe(\r\n                switchMap((action) => {\r\n                        return this.mailService.getFilters()\r\n                                   .pipe(\r\n                                       map((filters: any) => {\r\n                                           return new FiltersActions.GetFiltersSuccess(filters);\r\n                                       }),\r\n                                       catchError(err => of(new FiltersActions.GetFiltersFailed(err)))\r\n                                   );\r\n                    }\r\n                ));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/effects/filters.effects.ts","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\nimport * as FoldersActions from '../actions/folders.actions';\r\nimport { MailNgrxService } from '../../mail.service';\r\n\r\n@Injectable()\r\nexport class FoldersEffect\r\n{\r\n    constructor(\r\n        private actions: Actions,\r\n        private mailService: MailNgrxService\r\n    )\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Get Folders from Server\r\n     * @type {Observable<any>}\r\n     */\r\n    @Effect()\r\n    getFolders: Observable<FoldersActions.FoldersActionsAll> =\r\n        this.actions\r\n            .ofType<FoldersActions.GetFolders>(FoldersActions.GET_FOLDERS)\r\n            .pipe(\r\n                switchMap((action) => {\r\n                        return this.mailService.getFolders()\r\n                                   .pipe(\r\n                                       map((folders: any) => {\r\n                                           return new FoldersActions.GetFoldersSuccess(folders);\r\n                                       }),\r\n                                       catchError(err => of(new FoldersActions.GetFoldersFailed(err)))\r\n                                   );\r\n                    }\r\n                ));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/effects/folders.effects.ts","import { MailsEffect } from './mails.effects';\r\nimport { FoldersEffect } from './folders.effects';\r\nimport { FiltersEffect } from './filters.effects';\r\nimport { LabelsEffect } from './labels.effects';\r\n\r\nexport const effects = [\r\n    MailsEffect,\r\n    FoldersEffect,\r\n    FiltersEffect,\r\n    LabelsEffect\r\n];\r\n\r\nexport * from './mails.effects';\r\nexport * from './folders.effects';\r\nexport * from './filters.effects';\r\nexport * from './labels.effects';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/effects/index.ts","import { Injectable } from '@angular/core';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport 'rxjs/add/operator/delay';\r\nimport 'rxjs/add/operator/map';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { catchError, map, switchMap } from 'rxjs/operators';\r\nimport * as LabelsActions from '../actions/labels.actions';\r\nimport { MailNgrxService } from '../../mail.service';\r\n\r\n@Injectable()\r\nexport class LabelsEffect\r\n{\r\n    constructor(\r\n        private actions: Actions,\r\n        private mailService: MailNgrxService\r\n    )\r\n    {\r\n    }\r\n\r\n    /**\r\n     * Get Labels from Server\r\n     * @type {Observable<any>}\r\n     */\r\n    @Effect()\r\n    getLabels: Observable<LabelsActions.LabelsActionsAll> =\r\n        this.actions\r\n            .ofType<LabelsActions.GetLabels>(LabelsActions.GET_LABELS)\r\n            .pipe(\r\n                switchMap((action) => {\r\n                        return this.mailService.getLabels()\r\n                                   .pipe(\r\n                                       map((labels: any) => {\r\n                                           return new LabelsActions.GetLabelsSuccess(labels);\r\n                                       }),\r\n                                       catchError(err => of(new LabelsActions.GetLabelsFailed(err)))\r\n                                   );\r\n                    }\r\n                ));\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/effects/labels.effects.ts","import { Injectable } from '@angular/core';\r\nimport { Action, Store } from '@ngrx/store';\r\nimport { Actions, Effect } from '@ngrx/effects';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { map, mergeMap, exhaustMap, withLatestFrom } from 'rxjs/operators';\r\nimport 'rxjs/add/operator/debounceTime';\r\nimport { getRouterState, State } from 'app/store/reducers';\r\nimport { getMailsState } from '../selectors';\r\nimport * as MailsActions from '../actions/mails.actions';\r\nimport * as fromRoot from '../../../../../../store';\r\n\r\nimport { MailNgrxService } from '../../mail.service';\r\nimport { Mail } from '../../mail.model';\r\n\r\n@Injectable()\r\nexport class MailsEffect\r\n{\r\n    routerState: any;\r\n\r\n    constructor(\r\n        private actions: Actions,\r\n        private mailService: MailNgrxService,\r\n        private store: Store<State>\r\n    )\r\n    {\r\n        this.store.select(getRouterState).subscribe(routerState => {\r\n            if ( routerState )\r\n            {\r\n                this.routerState = routerState.state;\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Get Mails with router parameters\r\n     * @type {Observable<any>}\r\n     */\r\n    @Effect()\r\n    getMails: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.GetMails>(MailsActions.GET_MAILS)\r\n            .pipe(\r\n                exhaustMap((action) => {\r\n\r\n                    let handle = {\r\n                        id   : '',\r\n                        value: ''\r\n                    };\r\n\r\n                    const routeParams = Observable.of('labelHandle', 'filterHandle', 'folderHandle');\r\n                    routeParams.subscribe(param => {\r\n                        if ( this.routerState.params[param] )\r\n                        {\r\n                            handle = {\r\n                                id   : param,\r\n                                value: this.routerState.params[param]\r\n                            };\r\n                        }\r\n                    });\r\n\r\n                    return this.mailService.getMails(handle)\r\n                               .map((mails: Mail[]) => {\r\n\r\n                                   return new MailsActions.GetMailsSuccess({\r\n                                       loaded: handle,\r\n                                       mails : mails\r\n                                   });\r\n                               })\r\n                               .catch(err => of(new MailsActions.GetMailsFailed(err)));\r\n                })\r\n            );\r\n\r\n    /**\r\n     * Update Mail\r\n     * @type {Observable<any>}\r\n     */\r\n    @Effect()\r\n    updateMail: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.UpdateMail>(MailsActions.UPDATE_MAIL)\r\n            .pipe(\r\n                exhaustMap((action) => {\r\n                    return this.mailService.updateMail(action.payload)\r\n                               .map(() => {\r\n                                   return new MailsActions.UpdateMailSuccess(action.payload);\r\n                               });\r\n                })\r\n            );\r\n\r\n    /**\r\n     * UpdateMails\r\n     * @type {Observable<any>}\r\n     */\r\n    @Effect()\r\n    updateMails: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.UpdateMails>(MailsActions.UPDATE_MAILS)\r\n            .pipe(\r\n                exhaustMap((action) => {\r\n                    return Observable.forkJoin(\r\n                        action.payload.map(mail => this.mailService.updateMail(mail)),\r\n                        () => {\r\n                            return new MailsActions.UpdateMailsSuccess();\r\n                        });\r\n                })\r\n            );\r\n\r\n    /**\r\n     * Set Current Mail\r\n     * @type {Observable<SetCurrentMailSuccess>}\r\n     */\r\n    @Effect()\r\n    setCurrentMail: Observable<Action> =\r\n        this.actions\r\n            .ofType<MailsActions.SetCurrentMail>(MailsActions.SET_CURRENT_MAIL)\r\n            .pipe(\r\n                withLatestFrom(this.store.select(getMailsState)),\r\n                map(([action, state]) => {\r\n                    return new MailsActions.SetCurrentMailSuccess(state.entities[action.payload]);\r\n                })\r\n            );\r\n\r\n    /**\r\n     * Check Current Mail\r\n     * Navigate to parent directory if not exist in mail list\r\n     * Update Current Mail if exist in mail list\r\n     * @type {Observable<any>}\r\n     */\r\n    @Effect()\r\n    checkCurrentMail: Observable<Action> =\r\n        this.actions\r\n            .ofType<MailsActions.CheckCurrentMail>(MailsActions.CHECK_CURRENT_MAIL)\r\n            .pipe(\r\n                withLatestFrom(this.store.select(getMailsState)),\r\n                map(([action, state]) => {\r\n\r\n                    if ( !state.entities[this.routerState.params.mailId] )\r\n                    {\r\n                        return new fromRoot.Go({path: [this.routerState.url.replace(this.routerState.params.mailId, '')]});\r\n                    }\r\n                    return new MailsActions.SetCurrentMailSuccess(state.entities[this.routerState.params.mailId]);\r\n                })\r\n            );\r\n\r\n    /**\r\n     * On Get Mails Success\r\n     * @type {Observable<CheckCurrentMail>}\r\n     */\r\n    @Effect()\r\n    getMailsSuccess: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.GetMailsSuccess>(MailsActions.GET_MAILS_SUCCESS)\r\n            .pipe(\r\n                mergeMap(() =>\r\n                    [\r\n                        new MailsActions.CheckCurrentMail()\r\n                    ])\r\n            );\r\n    /**\r\n     * On Update Mails Success\r\n     * @type {Observable<DeselectAllMails | GetMails>}\r\n     */\r\n    @Effect()\r\n    updateMailsSuccess: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.UpdateMailsSuccess>(MailsActions.UPDATE_MAILS_SUCCESS)\r\n            .pipe(\r\n                mergeMap(() =>\r\n                    [\r\n                        new MailsActions.DeselectAllMails(),\r\n                        new MailsActions.GetMails()\r\n                    ])\r\n            );\r\n    /**\r\n     * On Update Mail Success\r\n     * @type {Observable<GetMails>}\r\n     */\r\n    @Effect()\r\n    updateMailSuccess: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.UpdateMailSuccess>(MailsActions.UPDATE_MAIL_SUCCESS)\r\n            .debounceTime(500)\r\n            .pipe(\r\n                map(() => {\r\n                    return new MailsActions.GetMails();\r\n                })\r\n            );\r\n\r\n    /**\r\n     * Set Folder on Selected Mails\r\n     * @type {Observable<UpdateMails>}\r\n     */\r\n    @Effect()\r\n    setFolderOnSelectedMails: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.SetFolderOnSelectedMails>(MailsActions.SET_FOLDER_ON_SELECTED_MAILS)\r\n            .pipe(\r\n                withLatestFrom(\r\n                    this.store.select(getMailsState)),\r\n                map(([action, state]) => {\r\n                    const entities = {...state.entities};\r\n                    let mailsToUpdate = [];\r\n                    state.selectedMailIds\r\n                         .map(id => {\r\n                             mailsToUpdate = [\r\n                                 ...mailsToUpdate,\r\n                                 entities[id] = {\r\n                                     ...entities[id],\r\n                                     folder: action.payload\r\n                                 }\r\n                             ];\r\n                         });\r\n                    return new MailsActions.UpdateMails(mailsToUpdate);\r\n                })\r\n            );\r\n\r\n    /**\r\n     * Add Label on Selected Mails\r\n     * @type {Observable<UpdateMails>}\r\n     */\r\n    @Effect()\r\n    addLabelOnSelectedMails: Observable<MailsActions.MailsActionsAll> =\r\n        this.actions\r\n            .ofType<MailsActions.AddLabelOnSelectedMails>(MailsActions.ADD_LABEL_ON_SELECTED_MAILS)\r\n            .pipe(\r\n                withLatestFrom(this.store.select(getMailsState)),\r\n                map(([action, state]) => {\r\n\r\n                    const entities = {...state.entities};\r\n                    let mailsToUpdate = [];\r\n\r\n                    state.selectedMailIds\r\n                         .map(id => {\r\n\r\n                             let labels = [...entities[id].labels];\r\n\r\n                             if ( !entities[id].labels.includes(action.payload) )\r\n                             {\r\n                                 labels = [...labels, action.payload];\r\n                             }\r\n\r\n                             mailsToUpdate = [\r\n                                 ...mailsToUpdate,\r\n                                 entities[id] = {\r\n                                     ...entities[id],\r\n                                     labels\r\n                                 }\r\n                             ];\r\n                         });\r\n\r\n                    return new MailsActions.UpdateMails(mailsToUpdate);\r\n                })\r\n            );\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/effects/mails.effects.ts","export * from './resolve.guard';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/guards/index.ts","import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate } from '@angular/router';\r\nimport { Store } from '@ngrx/store';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { of } from 'rxjs/observable/of';\r\nimport { map, switchMap, catchError, tap, take, filter } from 'rxjs/operators';\r\nimport 'rxjs/add/observable/forkJoin';\r\nimport { MailAppState } from '../reducers';\r\nimport * as fromStore from '../index';\r\nimport { getFiltersLoaded, getFoldersLoaded, getLabelsLoaded, getMailsLoaded } from '../selectors';\r\nimport { RouterStateSnapshot } from '@angular/router/src/router_state';\r\nimport { getRouterState } from 'app/store/reducers';\r\n\r\n@Injectable()\r\nexport class ResolveGuard implements CanActivate\r\n{\r\n    routerState: any;\r\n\r\n    constructor(\r\n        private store: Store<MailAppState>\r\n    )\r\n    {\r\n        this.store.select(getRouterState).subscribe(routerState => {\r\n            if ( routerState )\r\n            {\r\n                this.routerState = routerState.state;\r\n            }\r\n        });\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean>\r\n    {\r\n        return this.checkStore().pipe(\r\n            switchMap(() => of(true)),\r\n            catchError(() => of(false))\r\n        );\r\n    }\r\n\r\n    checkStore(): Observable<any>\r\n    {\r\n        return Observable\r\n            .forkJoin(\r\n                this.getFolders(),\r\n                this.getFilters(),\r\n                this.getLabels()\r\n            )\r\n            .pipe(\r\n                filter(([foldersLoaded, filtersLoaded, labelsLoaded]) => filtersLoaded && foldersLoaded && labelsLoaded),\r\n                take(1),\r\n                switchMap(() =>\r\n                    this.getMails()\r\n                ),\r\n                take(1),\r\n                map(() => this.store.dispatch(new fromStore.SetCurrentMail(this.routerState.params.mailId)))\r\n            );\r\n    }\r\n\r\n    getFolders()\r\n    {\r\n        return this.store.select(getFoldersLoaded)\r\n                   .pipe(\r\n                       tap(loaded => {\r\n                           if ( !loaded )\r\n                           {\r\n                               this.store.dispatch(new fromStore.GetFolders([]));\r\n                           }\r\n                       }),\r\n                       filter(loaded => loaded),\r\n                       take(1)\r\n                   );\r\n    }\r\n\r\n    /**\r\n     * Get Filters\r\n     * @returns {Observable<any>}\r\n     */\r\n    getFilters()\r\n    {\r\n        return this.store.select(getFiltersLoaded)\r\n                   .pipe(\r\n                       tap(loaded => {\r\n                           if ( !loaded )\r\n                           {\r\n                               this.store.dispatch(new fromStore.GetFilters([]));\r\n                           }\r\n                       }),\r\n                       filter(loaded => loaded),\r\n                       take(1)\r\n                   );\r\n    }\r\n\r\n    /**\r\n     * Get Labels\r\n     * @returns {Observable<any>}\r\n     */\r\n    getLabels()\r\n    {\r\n        return this.store.select(getLabelsLoaded)\r\n                   .pipe(\r\n                       tap(loaded => {\r\n                           if ( !loaded )\r\n                           {\r\n                               this.store.dispatch(new fromStore.GetLabels([]));\r\n                           }\r\n                       }),\r\n                       filter(loaded => loaded),\r\n                       take(1)\r\n                   );\r\n    }\r\n\r\n    /**\r\n     * Get Mails\r\n     * @returns {Observable<any>}\r\n     */\r\n    getMails()\r\n    {\r\n        return this.store.select(getMailsLoaded)\r\n                   .pipe(\r\n                       tap((loaded: any) => {\r\n\r\n                           if ( !this.routerState.params[loaded.id] || this.routerState.params[loaded.id] !== loaded.value )\r\n                           {\r\n                               this.store.dispatch(new fromStore.GetMails());\r\n                               this.store.dispatch(new fromStore.SetSearchText(''));\r\n                               this.store.dispatch(new fromStore.DeselectAllMails());\r\n                           }\r\n                       }),\r\n                       filter((loaded: any) => {\r\n                           return this.routerState.params[loaded.id] && this.routerState.params[loaded.id] === loaded.value;\r\n                       }),\r\n                       take(1)\r\n                   );\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/guards/resolve.guard.ts","export * from './actions';\r\nexport * from './reducers';\r\nexport * from './selectors';\r\nexport * from './effects';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/index.ts","import * as FiltersActions from '../actions/filters.actions';\r\n\r\nexport interface FiltersState\r\n{\r\n    entities: { [id: number]: any };\r\n    loading: boolean;\r\n    loaded: boolean;\r\n}\r\n\r\nexport const FiltersInitialState: FiltersState = {\r\n    entities: {},\r\n    loading : false,\r\n    loaded  : false\r\n};\r\n\r\nexport function FiltersReducer(state = FiltersInitialState, action: FiltersActions.FiltersActionsAll): FiltersState\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case FiltersActions.GET_FILTERS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded : false\r\n            };\r\n        case FiltersActions.GET_FILTERS_SUCCESS:\r\n\r\n            const filters = action.payload;\r\n            const entities = filters.reduce(\r\n                (_entities: { [id: number]: any }, filter: any) => {\r\n                    return {\r\n                        ..._entities,\r\n                        [filter.id]: filter\r\n                    };\r\n                }, {});\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded : true,\r\n                entities\r\n            };\r\n\r\n        case FiltersActions.GET_FILTERS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded : false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/reducers/filters.reducer.ts","import * as FoldersActions from '../actions/folders.actions';\r\n\r\nexport interface FoldersState\r\n{\r\n    entities: { [id: number]: any };\r\n    loading: boolean;\r\n    loaded: boolean;\r\n}\r\n\r\nexport const FoldersInitialState: FoldersState = {\r\n    entities: {},\r\n    loading : false,\r\n    loaded  : false\r\n};\r\n\r\nexport function FoldersReducer(state = FoldersInitialState, action: FoldersActions.FoldersActionsAll): FoldersState\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case FoldersActions.GET_FOLDERS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded : false\r\n            };\r\n        case FoldersActions.GET_FOLDERS_SUCCESS:\r\n\r\n            const folders = action.payload;\r\n            const entities = folders.reduce(\r\n                (_entities: { [id: number]: any }, folder: any) => {\r\n                    return {\r\n                        ..._entities,\r\n                        [folder.id]: folder\r\n                    };\r\n                }, {});\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded : true,\r\n                entities\r\n            };\r\n\r\n        case FoldersActions.GET_FOLDERS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded : false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/reducers/folders.reducer.ts","import { ActionReducerMap, createFeatureSelector, createSelector } from '@ngrx/store';\r\nimport { MailsReducer, MailsState } from './mails.reducer';\r\nimport { FoldersReducer, FoldersState } from './folders.reducer';\r\nimport { FiltersReducer, FiltersState } from './filters.reducer';\r\nimport { LabelsReducer, LabelsState } from './labels.reducer';\r\n\r\nexport interface MailAppState\r\n{\r\n    mails: MailsState;\r\n    folders: FoldersState;\r\n    filters: FiltersState;\r\n    labels: LabelsState;\r\n}\r\n\r\nexport const getMailAppState = createFeatureSelector<MailAppState>(\r\n    'mail-app'\r\n);\r\n\r\nexport const getAppState = createSelector(\r\n    getMailAppState,\r\n    (state: MailAppState) => state\r\n);\r\n\r\nexport const reducers: ActionReducerMap<MailAppState> = {\r\n    mails  : MailsReducer,\r\n    folders: FoldersReducer,\r\n    filters: FiltersReducer,\r\n    labels : LabelsReducer\r\n};\r\n\r\nexport * from './mails.reducer';\r\nexport * from './folders.reducer';\r\nexport * from './filters.reducer';\r\nexport * from './labels.reducer';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/reducers/index.ts","import * as LabelsActions from '../actions/labels.actions';\r\n\r\nexport interface LabelsState\r\n{\r\n    entities: { [id: number]: any };\r\n    loading: boolean;\r\n    loaded: boolean;\r\n}\r\n\r\nexport const LabelsInitialState: LabelsState = {\r\n    entities: {},\r\n    loading : false,\r\n    loaded  : false\r\n};\r\n\r\nexport function LabelsReducer(state = LabelsInitialState, action: LabelsActions.LabelsActionsAll): LabelsState\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case LabelsActions.GET_LABELS:\r\n            return {\r\n                ...state,\r\n                loading: true,\r\n                loaded : false\r\n            };\r\n        case LabelsActions.GET_LABELS_SUCCESS:\r\n\r\n            const labels = action.payload;\r\n            const entities = labels.reduce(\r\n                (_entities: { [id: number]: any }, label: any) => {\r\n                    return {\r\n                        ..._entities,\r\n                        [label.id]: label\r\n                    };\r\n                }, {});\r\n\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded : true,\r\n                entities\r\n            };\r\n\r\n        case LabelsActions.GET_LABELS_FAILED:\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded : false\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/reducers/labels.reducer.ts","import * as MailsActions from '../actions/mails.actions';\r\nimport { Mail } from '../../mail.model';\r\n\r\nexport interface MailsState\r\n{\r\n    entities: { [id: number]: Mail };\r\n    currentMail: any;\r\n    selectedMailIds: string[];\r\n    searchText: string;\r\n    loading: boolean;\r\n    loaded: any;\r\n}\r\n\r\nexport const MailsInitialState: MailsState = {\r\n    entities       : {},\r\n    currentMail    : null,\r\n    selectedMailIds: [],\r\n    searchText     : '',\r\n    loading        : false,\r\n    loaded         : false\r\n};\r\n\r\nexport function MailsReducer(state = MailsInitialState, action: MailsActions.MailsActionsAll): MailsState\r\n{\r\n    switch ( action.type )\r\n    {\r\n        case MailsActions.GET_MAILS:\r\n        {\r\n            return {\r\n                ...state,\r\n                loading: true\r\n            };\r\n        }\r\n\r\n        case MailsActions.GET_MAILS_SUCCESS:\r\n        {\r\n\r\n            const mails = action.payload.mails;\r\n            const loaded = action.payload.loaded;\r\n            const entities = mails.reduce(\r\n                (_entities: { [id: number]: Mail }, mail: Mail) => {\r\n                    return {\r\n                        ..._entities,\r\n                        [mail.id]: mail\r\n                    };\r\n                }, {});\r\n\r\n            return {\r\n                ...state,\r\n                entities,\r\n                loading: false,\r\n                loaded\r\n            };\r\n        }\r\n\r\n        case MailsActions.GET_MAILS_FAILED:\r\n        {\r\n            return {\r\n                ...state,\r\n                loading: false,\r\n                loaded : false\r\n            };\r\n        }\r\n\r\n        case MailsActions.SET_CURRENT_MAIL_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                currentMail: action.payload\r\n            };\r\n        }\r\n\r\n        case MailsActions.UPDATE_MAIL_SUCCESS:\r\n        {\r\n            return {\r\n                ...state,\r\n                entities: {\r\n                    ...state.entities,\r\n                    [action.payload.id]: action.payload\r\n                }\r\n            };\r\n        }\r\n\r\n        case MailsActions.SET_SEARCH_TEXT:\r\n        {\r\n\r\n            return {\r\n                ...state,\r\n                searchText: action.payload\r\n            };\r\n        }\r\n\r\n        case MailsActions.TOGGLE_IN_SELECTED_MAILS:\r\n        {\r\n\r\n            const mailId = action.payload;\r\n\r\n            let selectedMailIds = [...state.selectedMailIds];\r\n\r\n            if ( selectedMailIds.find(id => id === mailId) !== undefined )\r\n            {\r\n                selectedMailIds = selectedMailIds.filter(id => id !== mailId);\r\n            }\r\n            else\r\n            {\r\n                selectedMailIds = [...selectedMailIds, mailId];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                selectedMailIds\r\n            };\r\n        }\r\n\r\n        case MailsActions.SELECT_ALL_MAILS:\r\n        {\r\n            const arr = Object.keys(state.entities).map(k => state.entities[k]);\r\n\r\n            const selectedMailIds = arr.map(mail => mail.id);\r\n\r\n            return {\r\n                ...state,\r\n                selectedMailIds\r\n            };\r\n        }\r\n\r\n        case MailsActions.DESELECT_ALL_MAILS:\r\n        {\r\n            return {\r\n                ...state,\r\n                selectedMailIds: []\r\n            };\r\n        }\r\n\r\n        case MailsActions.SELECT_MAILS_BY_PARAMETER:\r\n        {\r\n            const filter = action.payload;\r\n            const arr = Object.keys(state.entities).map(k => state.entities[k]);\r\n            const selectedMailIds = arr.filter(mail => mail[filter.parameter] === filter.value)\r\n                                       .map(mail => mail.id);\r\n            return {\r\n                ...state,\r\n                selectedMailIds\r\n            };\r\n        }\r\n\r\n        case MailsActions.SET_FOLDER_ON_SELECTED_MAILS:\r\n        {\r\n            const entities = {...state.entities};\r\n\r\n            state.selectedMailIds.map(id => {\r\n                entities[id] = {\r\n                    ...entities[id],\r\n                    folder: action.payload\r\n                };\r\n            });\r\n\r\n            return {\r\n                ...state,\r\n                entities\r\n            };\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/reducers/mails.reducer.ts","import { createSelector } from '@ngrx/store';\r\nimport { FiltersState, getMailAppState, MailAppState } from '../reducers';\r\n\r\nexport const getFiltersState = createSelector(\r\n    getMailAppState,\r\n    (state: MailAppState) => state.filters\r\n);\r\n\r\nexport const getFilters = createSelector(\r\n    getFiltersState,\r\n    (state: FiltersState) => state.entities\r\n);\r\n\r\nexport const getFiltersLoaded = createSelector(\r\n    getFiltersState,\r\n    (state: FiltersState) => state.loaded\r\n);\r\n\r\nexport const getFiltersArr = createSelector(\r\n    getFilters,\r\n    (entities) => Object.keys(entities).map((id) => entities[id])\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/selectors/filters.selectors.ts","import { createSelector } from '@ngrx/store';\r\nimport { FoldersState, getMailAppState, MailAppState } from '../reducers';\r\n\r\nexport const getFoldersState = createSelector(\r\n    getMailAppState,\r\n    (state: MailAppState) => state.folders\r\n);\r\n\r\nexport const getFolders = createSelector(\r\n    getFoldersState,\r\n    (state: FoldersState) => state.entities\r\n);\r\n\r\nexport const getFoldersLoaded = createSelector(\r\n    getFoldersState,\r\n    (state: FoldersState) => state.loaded\r\n);\r\n\r\nexport const getFoldersArr = createSelector(\r\n    getFolders,\r\n    (entities) => Object.keys(entities).map((id) => entities[id])\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/selectors/folders.selectors.ts","export * from './mails.selectors';\r\nexport * from './folders.selectors';\r\nexport * from './filters.selectors';\r\nexport * from './labels.selectors';\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/selectors/index.ts","import { createSelector } from '@ngrx/store';\r\nimport { LabelsState, getMailAppState, MailAppState } from '../reducers';\r\n\r\nexport const getLabelsState = createSelector(\r\n    getMailAppState,\r\n    (state: MailAppState) => state.labels\r\n);\r\n\r\nexport const getLabels = createSelector(\r\n    getLabelsState,\r\n    (state: LabelsState) => state.entities\r\n);\r\n\r\nexport const getLabelsLoaded = createSelector(\r\n    getLabelsState,\r\n    (state: LabelsState) => state.loaded\r\n);\r\n\r\nexport const getLabelsArr = createSelector(\r\n    getLabels,\r\n    (entities) => Object.keys(entities).map((id) => entities[id])\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/selectors/labels.selectors.ts","import { FuseUtils } from '@fuse/utils';\r\n\r\nimport { createSelector } from '@ngrx/store';\r\nimport { getMailAppState, MailAppState, MailsState } from '../reducers';\r\n\r\nexport const getMailsState = createSelector(\r\n    getMailAppState,\r\n    (state: MailAppState) => state.mails\r\n);\r\n\r\nexport const getMails = createSelector(\r\n    getMailsState,\r\n    (state: MailsState) => state.entities\r\n);\r\n\r\nexport const getMailsLoaded = createSelector(\r\n    getMailsState,\r\n    (state: MailsState) => state.loaded\r\n);\r\n\r\nexport const getSearchText = createSelector(\r\n    getMailsState,\r\n    (state: MailsState) => state.searchText\r\n);\r\n\r\nexport const getMailsArr = createSelector(\r\n    getMails,\r\n    getSearchText,\r\n    (entities, searchText) => {\r\n        const arr = Object.keys(entities).map((id) => entities[id]);\r\n        return FuseUtils.filterArrayByString(arr, searchText);\r\n    }\r\n);\r\n\r\nexport const getCurrentMail = createSelector(\r\n    getMailsState,\r\n    (state: MailsState) => state.currentMail\r\n);\r\n\r\nexport const getSelectedMailIds = createSelector(\r\n    getMailsState,\r\n    (state: MailsState) => state.selectedMailIds\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/selectors/mails.selectors.ts","import { StoreModule } from '@ngrx/store';\r\nimport { NgModule } from '@angular/core';\r\nimport { EffectsModule } from '@ngrx/effects';\r\nimport { reducers } from './reducers';\r\nimport { effects } from './effects';\r\n\r\n@NgModule({\r\n    imports  : [\r\n        StoreModule.forFeature('mail-app', reducers),\r\n        EffectsModule.forFeature(effects)\r\n    ],\r\n    providers: []\r\n})\r\nexport class MailAppStoreModule\r\n{\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/main/content/apps/mail-ngrx/store/store.module.ts"],"sourceRoot":"webpack:///"}